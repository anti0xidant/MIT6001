{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red55\green55\blue55;\red255\green255\blue255;\red26\green26\blue26;
\red246\green246\blue246;\red12\green99\blue160;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl504\sa360\partightenfactor0

\f0\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Problem 4 - Part 2\
\pard\pardeftab720\sl448\sa453\partightenfactor0

\fs32 \cf4 \strokec4 Write a function called 
\f1\fs28 \cb5 longestRun
\f0\fs32 \cb3 , which takes as a parameter a list of integers named 
\f1\fs28 \cb5 L
\f0\fs32 \cb3  (assume 
\f1\fs28 \cb5 L
\f0\fs32 \cb3  is not empty). This function returns the length of the longest run of monotonically increasing numbers occurring in 
\f1\fs28 \cb5 L
\f0\fs32 \cb3 . A run of monotonically increasing numbers means that a number at position 
\f1\fs28 \cb5 k+1
\f0\fs32 \cb3  in the sequence is either greater than or equal to the number at position 
\f1\fs28 \cb5 k
\f0\fs32 \cb3  in the sequence.\cb1 \
\cb3 For example, if 
\f1\fs28 \cb5 L = [10, 4, 6, 8, 3, 4, 5, 7, 7, 2]
\f0\fs32 \cb3  then your function should return the value 
\f1\fs28 \cb5 5
\f0\fs32 \cb3 because the longest run of monotonically increasing integers in 
\f1\fs28 \cb5 L
\f0\fs32 \cb3  is 
\f1\fs28 \cb5 [3, 4, 5, 7, 7]
\f0\fs32 \cb3 .\cb1 \
\pard\pardeftab720\sl448\partightenfactor0
\cf4 \
\pard\pardeftab720\sl448\sa453\partightenfactor0
\cf4 \cb3 You may find it useful to use the function 
\f1\fs28 \cb5 getSublists
\f0\fs32 \cb3  as defined above but you do not have to use this function. If you do use 
\f1\fs28 \cb5 getSublists
\f0\fs32 \cb3 , the graders will use our implementation for 
\f1\fs28 \cb5 getSublists
\f0\fs32 \cb3 . In the box for this problem, only paste the definition for the function 
\f1\fs28 \cb5 longestRun
\f0\fs32 \cb3 .\cb1 \
\pard\pardeftab720\sl448\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://courses.edx.org/courses/course-v1:MITx+6.00.1x_8+1T2016/courseware/aa865f2062884d539964080fe9896f13/26b2527b4d7a422ea959d12f75de09eb/#"}}{\fldrslt \cf6 \cb5 \strokec6 Hint if you are Using 
\f1\fs28 getSublists}}\cf6 \cb5 \strokec6 \
\pard\pardeftab720\sl448\partightenfactor0
\cf4 \cb3 \strokec4 You may find the docstring for 
\f1\fs28 \cb5 range
\f0\fs32 \cb3  useful. \cb1 \uc0\u8232 \
\pard\pardeftab720\sl448\partightenfactor0

\f1\fs28 \cf4 \cb5 range(start, stop, step)
\f0\fs32 \cb1 \uc0\u8232 \cb3 The arguments must be integers. If the step argument is omitted, it defaults to 1. If the start argument is omitted, it defaults to 0. You cannot omit the start argument if you are specifying step.\cb1 \
\
\pard\pardeftab720\sl448\partightenfactor0
\cf4 \cb3 An example you may find useful for this question:\cb1 \
\pard\pardeftab720\sl400\partightenfactor0

\f1\fs28 \cf4 \cb5 >>> range(5, 0, -1)\
[5, 4, 3, 2, 1]\
\pard\pardeftab720\sl448\partightenfactor0

\f0\fs32 \cf4 \cb1 \
\
\pard\pardeftab720\sl448\sa453\partightenfactor0
\cf4 \cb3 Your function does not have to be recursive. Do not leave any debugging print statements when you paste your code in the box.\cb1 \
}